<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
	<title>check mp4 file (minimal)</title>
	<script type="text/javascript" src="mp4check.js"></script>
</head>

<body>

<p>Choose mp4 file:</p>
<input type="file" id="files" name="files[]"/>
<hr/>

<p>Bitrate: <span id="bitratetext"></span> kbps</p>
<p>Audio Codec: <span id="audiotext"></span></p>
<p>Video Codec: <span id="videotext"></span></p>
<p id="checkmsg" style="color:red;"></p>

<script type='text/javascript'>
	<![CDATA[
	// constants/config
	var max = 1500*1024;
	var target = 1000*1024;

	function handleFileSelect(evt) {
		//FIXME: hardcoded size, would be better to load more if needed
		// problem: js file api is async, need synchronous way
		var size = 3*1024*1024;

		// read the first 3 MB from the file
		var blob = evt.target.files[0].slice(0, size);
		var reader = new FileReader();

		reader.onloadend = function(evt){
			if(evt.target.readyState == FileReader.DONE){
				var arr = new Uint8Array(evt.target.result);
				var buf = Module._malloc(arr.length);
				Module.HEAPU8.set(arr, buf);

				Module.ccall(
					'process', 'number',
					['number', 'number'],
					[buf, arr.length]);
				
				var bitrate = Module.ccall(
					'getBitrate', 'number'
				);
				var audioCodec = Module.ccall(
					'getAudioCodec', 'string'
				);
				var videoCodec = Module.ccall(
					'getVideoCodec', 'string'
				);

				document.getElementById('bitratetext').innerHTML = bitrate >> 10;
				document.getElementById('audiotext').innerHTML = audioCodec;
				document.getElementById('videotext').innerHTML = videoCodec;

				var msg = document.getElementById('checkmsg');
				var allowed = true;
				msg.innerHTML = '';
				if(bitrate > max){
					msg.innerHTML += "Your video file exceeds the maximum bitrate. ";
					allowed = false;
				}else if(bitrate > target){
					msg.innerHTML += "WARNING: Your video file exceeds the recommended bitrate. Try to make smaller files. ";
				}
				if(audioCodec == 'Unsupported'){
					msg.innerHTML += "The audio codec isn't supported. ";
					allowed = false;
				}
				if(videoCodec == 'Unsupported'){
					msg.innerHTML += "The video codec isn't supported. ";
					allowed = false;
				}
				if(!allowed){
					msg.innerHTML += "You are not allowed to upload this file.";
				}

				Module._free(buf);
			}
		};
		reader.readAsArrayBuffer(blob);
	}
	document.getElementById('files').addEventListener('change', handleFileSelect, false);
	]]>
</script>

</body>
</html>
